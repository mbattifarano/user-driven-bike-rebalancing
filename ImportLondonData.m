function [RentalId,Duration_Seconds,BikeId,EndDate,EndStationId,EndStationName,StartDate,StartStationId,StartStationName] = ImportLondonData(filename, startRow, endRow)
%IMPORTFILE Import numeric data from a text file as column vectors.
%   [RENTALID,DURATION_SECONDS,BIKEID,ENDDATE,ENDSTATIONID,ENDSTATIONNAME,STARTDATE,STARTSTATIONID,STARTSTATIONNAME]
%   = IMPORTFILE(FILENAME) Reads data from text file FILENAME for the
%   default selection.
%
%   [RENTALID,DURATION_SECONDS,BIKEID,ENDDATE,ENDSTATIONID,ENDSTATIONNAME,STARTDATE,STARTSTATIONID,STARTSTATIONNAME]
%   = IMPORTFILE(FILENAME, STARTROW, ENDROW) Reads data from rows STARTROW
%   through ENDROW of text file FILENAME.
%
% Example:
%   [RentalId,Duration_Seconds,BikeId,EndDate,EndStationId,EndStationName,StartDate,StartStationId,StartStationName] = importfile('74JourneyDataExtract06Sep2017-12Sep2017.csv',2, 199543);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB

%% Initialize variables.
delimiter = ',';
if nargin<=2
    startRow = 2;
    endRow = inf;
end

%% Format for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: datetimes (%{MM/dd/yyyy HH:mm}D)
%   column5: double (%f)
%	column6: text (%q)
%   column7: datetimes (%{MM/dd/yyyy HH:mm}D)
%	column8: double (%f)
%   column9: text (%q)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%{dd/MM/yyyy HH:mm}D%f%q%{dd/MM/yyyy HH:mm}D%f%q%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'EmptyValue' ,NaN,'HeaderLines', startRow(1)-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'EmptyValue' ,NaN,'HeaderLines', startRow(block)-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
RentalId = dataArray{:, 1};
Duration_Seconds = dataArray{:, 2};
BikeId = dataArray{:, 3};
EndDate = dataArray{:, 4};
EndStationId = dataArray{:, 5};
EndStationName = dataArray{:, 6};
StartDate = dataArray{:, 7};
StartStationId = dataArray{:, 8};
StartStationName = dataArray{:, 9};

% For code requiring serial dates (datenum) instead of datetime, uncomment
% the following line(s) below to return the imported dates as datenum(s).

% EndDate=datenum(EndDate);
% StartDate=datenum(StartDate);


